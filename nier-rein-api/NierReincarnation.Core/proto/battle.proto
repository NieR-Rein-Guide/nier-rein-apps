syntax = "proto3";

option csharp_namespace = "Art.Framework.ApiNetwork.Grpc.Api.Battle";

package apb.api.battle;

service BattleService {
	rpc StartWave (StartWaveRequest) returns (StartWaveResponse);
	rpc FinishWave (FinishWaveRequest) returns (FinishWaveResponse);
}

message StartWaveRequest {
	repeated UserPartyInitialInfo userPartyInitialInfoList = 1;
	repeated NpcPartyInitialInfo npcPartyInitialInfoList = 2;
}

message StartWaveResponse {
	map<string, DiffData> diffUserData = 99;
}

message FinishWaveRequest {
	bytes battleBinary = 1; // 0x10
	BattleDetail battleDetail = 2; // 0x18
	repeated UserPartyResultInfo userPartyResultInfoList = 3; // 0x20
	repeated NpcPartyResultInfo npcPartyResultInfoList = 4; // 0x28
	int64 elapsedFrameCount = 5; // 0x30
	string vt = 200; // 0x38
}

message FinishWaveResponse {
	map<string, DiffData> diffUserData = 99; // 0x10
}

message UserPartyInitialInfo {
	int64 userId = 1;
	int32 deckType = 2;
	int64 userDeckNumber = 3;
	int64 totalHp = 4;
	string vt = 200;
}

message NpcPartyInitialInfo {
	int64 npcId = 1;
	int32 deckType = 2;
	int32 battleNpcDeckNumber = 3;
	int64 totalHp = 4;
}

message BattleDetail {
	int32 characterDeathCount = 1;
	int32 maxDamage = 2;
	int32 playerCostumeActiveSkillUsedCount = 3;
	int32 playerWeaponActiveSkillUsedCount = 4;
	int32 playerCompanionSkillUsedCount = 5;
	int32 criticalCount = 6;
	int32 comboCount = 7;
	int32 comboMaxDamage = 8;
	repeated CostumeBattleInfo costumeBattleInfo = 9;
	int64 totalRecoverPoint = 10;
}

message CostumeBattleInfo {
	int32 deckCharacterNumber = 1;
	int64 totalDamage = 2;
	bool isAlive = 4;
	int32 hitCount = 5;
	int64 maxHp = 6;
	int64 remainingHp = 7;
	int32 userDeckNumber = 30;
	BattleReportRandomDisplay battleReportRandomDisplay = 8;
}

message BattleReportRandomDisplay {
	int32 randomDisplayValueType = 1;
	int64 randomDisplayValue = 2;
}

message UserPartyResultInfo {
	int64 userId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 userDeckNumber = 3; // 0x1C
	repeated AddUserDamageInfo addDamageInfoList = 4; // 0x20
	repeated UserRecoverInfo userRecoverInfo = 5; // 0x28
	repeated SkillUseInfo skillUseInfo = 6; // 0x30
	int32 characterDeathCount = 7; // 0x38
	int32 characterReviveCount = 8; // 0x3C
	int32 characterHpDepletedCount = 9; // 0x40
}

message AddUserDamageInfo {
	int64 userId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 deckNumber = 3; // 0x1C
	int64 totalDamage = 4; // 0x20
	int64 totalUnclampedDamage = 5; // 0x28
}

message UserRecoverInfo {
	int64 userId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 deckNumber = 3; // 0x1C
	int64 totalRecoverPoint = 4; // 0x20
}

message SkillUseInfo {
	string deckCharacterUuid = 1; // 0x10
	int32 skillDetailId = 2; // 0x18
	int32 useCount = 3; // 0x1C
}

message NpcPartyResultInfo {
	int64 npcId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 battleNpcDeckNumber = 3; // 0x1C
	repeated AddNpcDamageInfo addDamageInfoList = 4; // 0x20
	repeated NpcRecoverInfo npcRecoverInfo = 5; // 0x28
	repeated SkillUseInfo skillUseInfo = 6; // 0x30
	int32 characterDeathCount = 7; // 0x38
	int32 characterReviveCount = 8; // 0x3C
	int32 characterHpDepletedCount = 9; // 0x40
}

message AddNpcDamageInfo {
	int64 npcId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 deckNumber = 3; // 0x1C
	int64 totalDamage = 4; // 0x20
	int64 totalUnclampedDamage = 5; // 0x28
}

message NpcRecoverInfo {
	int64 npcId = 1; // 0x10
	int32 deckType = 2; // 0x18
	int32 deckNumber = 3; // 0x1C
	int64 totalRecoverPoint = 4; // 0x20
}

message DiffData {
	string updateRecordsJson = 1;
	string deleteKeysJson = 2;
}
